import moment from 'moment'
import _ from 'lodash'
import fsx from 'fs-extra'

let r1, r2, r3, r4, r5, r6, r7;

const l = console.log

class Test{
    constructor(){
    }

}
import { data } from './data.js'

let dataMap = {}
_.forEach(data, (vv,) => {
    vv.forEach(v => {
        if(!dataMap[v.name]) dataMap[v.name] = []
        dataMap[v.name].push(v.egv)
    })
})

const area_10_90 = dataMap['10th'].map((v, i) => [v, dataMap['90th'][i]])

const source = [
    [], // base
    [], // below 70
    [], // 70 - 180
    [], // above 180
]
area_10_90.forEach(v => {
    const [x, y] = v
    source[0].push(x)
    if(x < 70) {
        y < 70 ? source[1].push(y) : source[1].push(70)
    } else {
        source[0].push(null)
    }
    if(x > 70 && x < 180) {
        y > 180 ? source[2].push(180) : source[2].push(y)
    }
    if(x > 180 || y > 180) {
        source[3].push(y)
    }
})

r1 = _.zip(...source)
// r4 = tmp.map(v => +v[1] > 180 ? +v[1] : undefined).filter(Boolean)


const d1 = [
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        "168.00",
        "167.00",
        "162.00",
        "162.00",
        "160.00",
        "160.50",
        "163.00",
        "163.00",
        "163.00",
        "160.00",
        "160.00",
        "162.50",
        "162.00",
        "163.00",
        "161.00",
        "162.00",
        "164.00",
        "162.00",
        "164.00",
        "162.50",
        "162.00",
        "161.00",
        "163.50",
        "161.00",
        "160.00",
        "159.00",
        "161.00",
        "158.00",
        "156.00",
        "157.00",
        "157.00",
        "156.00",
        "155.50",
        "157.50",
        "158.00",
        "154.00",
        "157.00",
        "155.00",
        "156.50",
        "155.00",
        "154.00",
        "153.00",
        "154.00",
        "151.00",
        "150.00",
        "150.00",
        "151.00",
        "152.00",
        "151.00",
        "149.00",
        "150.00",
        "151.00",
        "151.00",
        "151.00",
        "150.00",
        "149.00",
        "151.00",
        "151.00",
        "152.00",
        "150.00",
        "150.50",
        "149.00",
        "151.00",
        "152.00",
        "152.00",
        "151.50",
        "153.00",
        "154.00",
        "155.00",
        "154.00",
        "155.00",
        "155.00",
        "153.50",
        "155.00",
        "153.00",
        "153.00",
        "153.00",
        "150.00",
        "146.00",
        "144.00",
        "144.50",
        "143.00",
        "141.00",
        "143.00",
        "144.00",
        "144.00",
        "143.50",
        "145.00",
        "144.00",
        "142.00",
        "144.00",
        "142.00",
        "143.00",
        "140.50",
        "142.00",
        "142.00",
        "142.00",
        "142.00",
        "142.00",
        "140.50",
        "140.00",
        "139.00",
        "138.00",
        "136.00",
        "134.00",
        "136.00",
        "136.50",
        "138.00",
        "139.00",
        "138.00",
        "136.00",
        "139.50",
        "141.00",
        "143.00",
        "142.00",
        "143.00",
        "141.00",
        "141.00",
        "140.00",
        "138.00",
        "138.50",
        "136.00",
        "138.00",
        "135.00",
        "136.00",
        "135.00",
        "134.00",
        "134.00",
        "133.00",
        "130.00",
        "131.00",
        "129.00",
        "129.00",
        "127.00",
        "126.00",
        "125.00",
        "125.00",
        "124.00",
        "126.00",
        "125.00",
        "123.50",
        "124.00",
        "124.00",
        "128.50",
        "124.00",
        "127.00",
        "126.50",
        "126.00",
        "126.00",
        "123.00",
        "124.00",
        "126.00",
        "125.50",
        "127.00",
        "125.00",
        "129.00",
        "128.00",
        "128.00",
        "127.00",
        "130.00",
        "128.00",
        "131.00",
        "133.00",
        "136.50",
        "136.00",
        "136.00",
        "135.00",
        "132.50",
        "132.00",
        "133.50",
        "129.00",
        "131.00",
        "127.00",
        "126.00",
        "127.00",
        "128.00",
        "128.00",
        "128.50",
        "131.00",
        "132.00",
        "129.00",
        "129.00",
        "130.00",
        "129.00",
        "132.00",
        "131.00",
        "131.00",
        "131.00",
        "132.00",
        "132.00",
        "130.00",
        "128.00",
        "127.50",
        "125.00",
        "123.00",
        "125.00",
        "122.00",
        "125.00",
        "121.00",
        "117.00",
        "121.00",
        "121.00",
        "121.00",
        "120.00",
        "117.00",
        "118.00",
        "119.00",
        "121.00",
        "121.00",
        "121.50",
        "122.50",
        "123.00",
        "127.50",
        "129.50",
        "134.00",
        "135.00",
        "135.00",
        "134.50",
        "135.00",
        "138.00",
        "141.00",
        "145.00",
        "149.50",
        "154.00",
        "159.50",
        "161.00",
        "163.00",
        "166.00",
        "169.00",
        "169.00",
        "169.00",
        "173.00",
        "173.00",
        "172.00",
        "178.00",
        "178.00",
        "180.00",
        "180.00",
        "180.00",
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        "176.00",
        "176.00",
        "177.00",
        null,
        "178.00",
        "179.00",
        "178.00",
        null,
        "177.00",
        "179.00",
        null,
        "177.00",
        "177.00",
        "180.00",
        "179.00",
        "175.50",
        "170.50",
        "168.50",
        "169.00",
        "170.00",
        "166.50",
        "169.00",
        "170.00",
        "169.00",
        "169.00",
        "166.00",
        "163.50"
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        "181.00",
        "181.00",
        "182.00",
        "183.50",
        "182.00",
        "182.50",
        "185.00",
        "185.50",
        "187.00",
        "185.00",
        "186.00",
        "187.00",
        "188.00",
        "188.00",
        "185.00",
        "186.00",
        "185.00",
        "190.00",
        "185.00",
        "185.00",
        "182.50",
        "181.00",
        null,
        null,
        null,
        "182.00",
        null,
        null,
        null,
        "181.00",
        null,
        null,
        "181.00",
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ]
]

r3 = _.zip(...d1)
r3 = r3.map(v => v.find(Boolean))
fsx.writeFileSync('r3.json', JSON.stringify(r3, null, 2))

















































l('-----------------------------------------------------------------------------')
l('r1: ', r1)
l('-----------------------------------------------------------------------------')
l('r2: ', r2)
l('-----------------------------------------------------------------------------')
l('r3: ', r3)
l('-----------------------------------------------------------------------------')
l('r4: ', r4)
l('-----------------------------------------------------------------------------')
l('r5: ', r5)
l('-----------------------------------------------------------------------------')
l('r6: ', r6)
l('-----------------------------------------------------------------------------')
l('r7: ', r7)
l('-----------------------------------------------------------------------------')


